{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"FP",
				"FPoint"
			],
			[
				"Par",
				"ParticleLabels"
			],
			[
				"Cell",
				"CellLabels"
			],
			[
				"FPar",
				"FParticleModel"
			],
			[
				"FPa",
				"FParticleModel"
			],
			[
				"Lab",
				"LabelCount"
			],
			[
				"Fea",
				"FeatureCount"
			],
			[
				"F",
				"FTriangle"
			],
			[
				"FTri",
				"FTriangles"
			],
			[
				"_",
				"_Size"
			],
			[
				"Typ",
				"TypeElement"
			],
			[
				"Type",
				"TypeElement"
			],
			[
				"EX",
				"EXIT_SUCCESS"
			],
			[
				"Ty",
				"TypeArguments"
			],
			[
				"inc",
				"include"
			],
			[
				"Size",
				"SizeLabel"
			],
			[
				"FS",
				"FSize"
			],
			[
				"Validat",
				"ValidateIter"
			],
			[
				"T",
				"Type"
			],
			[
				"vec",
				"vector_t"
			],
			[
				"type",
				"typedef"
			],
			[
				"P",
				"PhotoScript"
			],
			[
				"Ex",
				"Exception"
			],
			[
				"_D",
				"_DID"
			],
			[
				"AD",
				"Adapter"
			],
			[
				"_A",
				"_Adapter"
			],
			[
				"cam",
				"camera_t"
			],
			[
				"Ada",
				"Adapter"
			],
			[
				"Ad",
				"Adapter"
			],
			[
				"A",
				"Adapter"
			],
			[
				"_Ass",
				"_Assert"
			],
			[
				"Adap",
				"_Adapter"
			],
			[
				"FA",
				"Failure"
			],
			[
				"ca",
				"camera_t"
			],
			[
				"Camer",
				"Camera"
			],
			[
				"_Assert",
				"_Assert_Camera"
			],
			[
				"VA",
				"_Valid"
			],
			[
				"Ca",
				"Camera"
			],
			[
				"CAmera",
				"Cameras"
			],
			[
				"Cam",
				"Camera"
			],
			[
				"_ADa",
				"_AdapterIndex"
			],
			[
				"Exi",
				"EXIT_FAILURE"
			],
			[
				"adap",
				"adapter_t"
			],
			[
				"ada",
				"adapter_t"
			],
			[
				"MAX",
				"ADAPTER_MAX"
			],
			[
				"camera",
				"camera_t"
			],
			[
				"p",
				"parameters"
			],
			[
				"pa",
				"parameters_t"
			],
			[
				"sa",
				"samples_t"
			],
			[
				"par",
				"parameters"
			],
			[
				"samp",
				"samples"
			],
			[
				"para",
				"parameters_t"
			],
			[
				"uin",
				"uint64_t"
			],
			[
				"siz",
				"size_t"
			],
			[
				"cur",
				"cursor_t"
			],
			[
				"st",
				"struct\tstruct"
			],
			[
				"stae",
				"state_t"
			],
			[
				"stat",
				"state_t"
			],
			[
				"nS",
				"NSize"
			],
			[
				"sta",
				"state_t"
			],
			[
				"by",
				"byte_t"
			],
			[
				"TYpe",
				"TypeElm"
			],
			[
				"poin",
				"pointer_t"
			],
			[
				"poi",
				"pointer_t"
			],
			[
				"is",
				"istream"
			],
			[
				"NB",
				"NBits"
			],
			[
				"N",
				"NBits"
			],
			[
				"str",
				"struct\tstruct"
			],
			[
				"NS",
				"NSizes"
			],
			[
				"typ",
				"typename"
			],
			[
				"EXI",
				"EXIT_FAILURE"
			],
			[
				"real",
				"real_t"
			],
			[
				"compe",
				"complex_t"
			],
			[
				"comp",
				"complex_t"
			],
			[
				"null",
				"nullptr"
			],
			[
				"Pat",
				"path_t"
			],
			[
				"seq",
				"sequence"
			],
			[
				"ret",
				"return"
			],
			[
				"size",
				"size_t"
			],
			[
				"byt",
				"byte_t"
			],
			[
				"static",
				"static_cast"
			],
			[
				"fiel",
				"field"
			],
			[
				"emn",
				"enum_t"
			],
			[
				"TIF",
				"TIFF_TYPE_SIZE"
			],
			[
				"nc",
				"ncomplex"
			],
			[
				"re",
				"ret_t"
			],
			[
				"ne",
				"next"
			],
			[
				"ns",
				"nsimple"
			],
			[
				"si",
				"size_t"
			],
			[
				"path",
				"path_t"
			],
			[
				"proeb",
				"probe_t"
			],
			[
				"probe",
				"probe_t"
			],
			[
				"shap",
				"shape_t"
			],
			[
				"seque",
				"sequence_t"
			],
			[
				"trin",
				"triangle_t"
			],
			[
				"tria",
				"triangles"
			],
			[
				"tri",
				"triangles"
			],
			[
				"po",
				"polygon_t"
			],
			[
				"TIFF",
				"TIFF_VALUE_SIZEOF"
			],
			[
				"field",
				"field"
			],
			[
				"raw",
				"raw_t"
			],
			[
				"Re",
				"REF"
			],
			[
				"value",
				"_value"
			],
			[
				"strin",
				"string"
			],
			[
				"nul",
				"nullptr"
			],
			[
				"sti",
				"string_t"
			],
			[
				"nulls",
				"nullstr"
			],
			[
				"s",
				"string_t"
			],
			[
				"szie",
				"size_t"
			],
			[
				"string",
				"string_t"
			],
			[
				"byte",
				"byte_t"
			],
			[
				"tiff",
				"tiff_value"
			],
			[
				"file",
				"field"
			],
			[
				"enum",
				"enum_t"
			],
			[
				"TO",
				"TIFF_ORDER_II"
			],
			[
				"_nex",
				"_next"
			],
			[
				"Tpe",
				"TypeLhs"
			],
			[
				"bt",
				"byte_t"
			],
			[
				"int",
				"integer"
			],
			[
				"boo",
				"boolean_t"
			],
			[
				"fie",
				"field"
			],
			[
				"b",
				"byte_t"
			],
			[
				"prin",
				"printf\tprintf â€¦"
			],
			[
				"hea",
				"tiff_header"
			],
			[
				"tiff_",
				"tiff_directory"
			],
			[
				"long",
				"long_t"
			],
			[
				"os",
				"ostream"
			],
			[
				"new",
				"newarray"
			]
		]
	},
	"buffers":
	[
		{
			"file": "Core/Types.hpp",
			"settings":
			{
				"buffer_size": 845,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "ShapeSpacing/init_cl.bat",
			"settings":
			{
				"buffer_size": 44,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "ShapeSpacing/make.bat",
			"settings":
			{
				"buffer_size": 36,
				"line_ending": "Windows"
			}
		},
		{
			"file": "ShapeSpacing/ShapeSpacing.cpp",
			"settings":
			{
				"buffer_size": 106,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "c++",
		"selected_items":
		[
			[
				"c++",
				"Set Syntax: C++11"
			]
		],
		"width": 641.0
	},
	"console":
	{
		"height": 143.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/D/Repositories/Algorithms",
		"/D/Repositories/Algorithms/Core",
		"/D/Repositories/Algorithms/ShapeSpacing",
		"/D/Repositories/Algorithms/SMLVQDynamicPrototyping",
		"/D/Repositories/Algorithms/TinyAgentHiveMind"
	],
	"file_history":
	[
		"/D/Repositories/Algorithms/Core/Formats/Default.hpp",
		"/D/Repositories/Algorithms/Core/Sequence.hpp",
		"/D/Online/Dropbox/Temp/SchutCode.hpp",
		"/D/Repositories/Algorithms/ProbeMovementOptimizerSSC/PSCMO.cpp",
		"/D/Repositories/Algorithms/SMLVQDynamicPrototyping/make.bat",
		"/D/Repositories/Algorithms/SMLVQDynamicPrototyping/SMDLVQ.cpp",
		"/D/Repositories/Algorithms/ShapeSpacing/make.bat",
		"/D/Repositories/Algorithms/ShapeSimplification/make.bat",
		"/D/Repositories/Algorithms/ProbeMovementOptimizerSSC/make.bat",
		"/D/Repositories/Algorithms/FlowOfInterest/make.bat",
		"/D/Repositories/Algorithms/ExteriorShapeDetermination/make.bat",
		"/D/Repositories/Algorithms/CompoundTypeExtraction/make.bat",
		"/D/Repositories/Algorithms/CellTypeExtraction/make.bat",
		"/D/Repositories/Algorithms/CellTracing/make.bat",
		"/D/Repositories/Algorithms/CellIdentification/make.bat",
		"/D/Repositories/Algorithms/CellCompoundInteractionSignature/make.bat",
		"/D/Repositories/Algorithms/ShapeSpacing/init_cl.bat",
		"/D/Repositories/Algorithms/ShapeSpacing/ShapeSpacing.cpp",
		"/D/Repositories/Algorithms/mkprj.bat",
		"/D/Repositories/Algorithms/CompoundPathsTriangularization/CompoundPathsTriangularization.cpp",
		"/D/Repositories/Algorithms/TinyAgentHiveMind/make.bat",
		"/D/Repositories/Algorithms/Core/Procedure",
		"/D/Repositories/Algorithms/Core/Procedure.hpp",
		"/D/Repositories/Algorithms/Core/Model.hpp",
		"/D/Repositories/Algorithms/NetComputationalGraph/make.bat",
		"/D/Repositories/Algorithms/TestProject/init_cl.bat",
		"/D/Repositories/Algorithms/TestProject/TestProject.cpp",
		"/D/Repositories/Algorithms/Core/String.hpp",
		"/D/Repositories/Algorithms/Core/Types.hpp",
		"/D/Repositories/Algorithms/NetComputationalGraph/NCG.cpp",
		"/D/Repositories/Algorithms/CellCompoundInteractionSignature/CCIS.cpp",
		"/D/Repositories/Algorithms/Core/Byte.hpp",
		"/D/Repositories/Algorithms/Core/Data.hpp",
		"/D/Repositories/Algorithms/Core/Optimizer",
		"/D/Repositories/Algorithms/Core/Point.hpp",
		"/D/Repositories/Algorithms/Core/Format.hpp",
		"/D/Repositories/Algorithms/Core/Formats/Tiff.hpp",
		"/D/Repositories/Algorithms/Core/Formats/Default",
		"/D/Repositories/Algorithms/Core/Iterator.hpp",
		"/D/Repositories/Algorithms/Core/Resolver.hpp",
		"/D/Repositories/Algorithms/Core/Constants.hpp",
		"/D/Repositories/Algorithms/Core/core.hpp",
		"/D/Repositories/Algorithms/Core/Model",
		"/D/Repositories/Algorithms/Core/Functions.hpp",
		"/D/Repositories/Algorithms/Core/Iterator",
		"/D/Repositories/Algorithms/Core/Resolver",
		"/D/Repositories/Algorithms/Core/Sequence",
		"/D/Repositories/Algorithms/Core/Data",
		"/D/Repositories/Algorithms/Core/Format",
		"/D/Repositories/Algorithms/Core/Constants",
		"/D/Repositories/Algorithms/Core/Functions",
		"/D/Repositories/Algorithms/Core/Types",
		"/D/Repositories/Algorithms/Core/String",
		"/D/Repositories/Algorithms/Core/Point",
		"/D/Repositories/Algorithms/formats/Tiff",
		"/D/Repositories/Algorithms/Core/Byte",
		"/D/Repositories/Algorithms/ExteriorShapeDetermination/ESD.cpp",
		"/D/Repositories/Algorithms/ProbeMovementOptimizerSSC/Makefile",
		"/D/Repositories/Algorithms/CellCompoundInteractionSignature/Makefile",
		"/D/Repositories/Algorithms/ExteriorShapeDetermination/Makefile",
		"/D/Repositories/Algorithms/core.extended.hpp",
		"/D/Repositories/Algorithms/NeuralNetwork/nn.cpp",
		"/D/Repositories/Algorithms/core.hpp",
		"/D/Repositories/Algorithms/tiff.hpp",
		"/D/Repositories/Algorithms/image.hpp",
		"/D/Repositories/Algorithms/LVQForest/lvqf.cpp",
		"/D/Repositories/Algorithms/DynamicPrototyping/dp.cpp",
		"/C/Users/Gebruiker/Desktop/PhotoScript.c",
		"/D/Repositories/Algorithms/display.hpp",
		"/C/Users/Gebruiker/Desktop/resolvers.cpp",
		"/C/Users/Gebruiker/Desktop/atomaton.cpp",
		"/C/Users/Gebruiker/Desktop/tiffdata.cpp",
		"/D/Repositories/Algorithms/display",
		"/D/Repositories/Algorithms/ShapeSampleCoverageOptimizer/ssco.cpp",
		"/D/Repositories/Algorithms/ShapeSampleCoverageOptimizer/make.bat",
		"/D/Repositories/Algorithms/math",
		"/D/Repositories/Algorithms/math.hpp",
		"/D/Repositories/OperatingSystems/Lab2/vmem.c",
		"/D/Repositories/MicronML/MicronML_Events.h",
		"/C/Users/Gebruiker/Desktop/TempRoot/FData.h",
		"/C/Users/Gebruiker/Desktop/TempRoot/FData.c",
		"/D/Repositories/Algorithms/ShapeSampleCoverageOptimizer/Makefile",
		"/D/Repositories/Algorithms/DynamicPrototyping/test.tif",
		"/D/Repositories/Algorithms/NeuralNetwork/network.hpp",
		"/D/Repositories/Algorithms/tiff",
		"/D/Repositories/Algorithms/serialize.hpp",
		"/D/Repositories/SimpleCFramework/src/simple_serialize.c",
		"/D/Repositories/SimpleCFramework/src/simple_serialize.h",
		"/D/Repositories/Algorithms/DynamicPrototyping/make.bat",
		"/D/Repositories/Algorithms/NeuralNetwork/make.bat",
		"/D/Repositories/Algorithms/image",
		"/D/Repositories/Algorithms/core",
		"/D/Repositories/Algorithms/InnerOuterBoundExtractor/iobe.cpp",
		"/D/Repositories/Algorithms/NeuralNetwork/init_cl.ps1",
		"/D/Repositories/MicronML/apps/MicronMLApp/QtMoc.ps1",
		"/D/Repositories/Algorithms/NeuralNetwork/test.tif",
		"/D/Repositories/Algorithms/SampleDistributionOptimizer/sdo.cpp",
		"/D/Online/Dropbox/Studie/Signals and Systems/Practicals/Lab2/inverses.c",
		"/D/Repositories/SignalsAndSystems/Lab1/mics.c",
		"/D/Repositories/SignalsAndSystems/Lab1/car2pol.c",
		"/D/Repositories/SignalsAndSystems/Lab2/lfir.c",
		"/D/Repositories/SignalsAndSystems/Lab1/periodic.c",
		"/D/Repositories/SignalsAndSystems/Lab1/unisoidadd.c",
		"/D/Repositories/SignalsAndSystems/Lab1/aliases.c",
		"/D/Repositories/SignalsAndSystems/Lab1/sum2mul.c",
		"/D/Repositories/SignalsAndSystems/Lab1/make.bat",
		"/D/Repositories/SignalsAndSystems/Lab1/Makefile",
		"/D/Repositories/SignalsAndSystems/Lab1/pol2car.c",
		"/D/Repositories/SignalsAndSystems/Lab1/addoids.c",
		"/D/Repositories/SignalsAndSystems/Lab1/unisoid.c",
		"/D/Online/Dropbox/Studie/Signals and Systems/Practicals/Lab1/templateSS.c",
		"/D/Repositories/SignalsAndSystems/Lab1/sumsin.c",
		"/D/Repositories/CompilerAndConstructions/Lab2/Ex5/Makefile",
		"/D/Repositories/CompilerAndConstructions/Lab2/Ex6/Makefile",
		"/D/Repositories/CompilerAndConstructions/Lab2/Ex5/ex5.fl",
		"/D/Repositories/CompilerAndConstructions/Lab2/Ex1_2_3_4/Makefile",
		"/D/Repositories/CompilerAndConstructions/Lab2/automaton.c",
		"/D/Repositories/CompilerAndConstructions/Lab2/Ex1_2_3_4/automaton.c",
		"/D/Repositories/CompilerAndConstructions/Lab2/Ex5/ex5.h",
		"/D/Repositories/CompilerAndConstructions/Lab2/Ex5/ex5.c"
	],
	"find":
	{
		"height": 23.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"STRING_INIT_SIZE",
			"BITS_BYTE",
			"Size",
			"TypeSym",
			"TypeElm",
			"TypeData",
			"TypeElement",
			"SizeData",
			"TypeData",
			"NSizeLhs",
			"TPoint",
			"size_t",
			"N",
			"d",
			"tmp",
			"rhs",
			"lhs",
			"max",
			"FBoolean",
			"FOStream",
			"FIStream",
			"mk",
			"nullptr",
			"str",
			"os",
			"is",
			"FIStream",
			"std::ostream",
			"std::istream",
			"nullptr",
			"NullPtr",
			"rs",
			"rhs",
			"n",
			"_N",
			"N",
			"d",
			"size_t",
			"_N",
			"string_t",
			"min",
			"point_t",
			"struct ",
			"size_t",
			"point_t",
			"lhs",
			"n",
			"N",
			"d[",
			"Type",
			"NSize",
			"Type",
			"NSize",
			"min",
			"true",
			"false",
			"d[",
			"plhs",
			"raw_t",
			"lhs",
			"rhs",
			"byte_t",
			"boolean_t",
			"NBytes",
			"size_t",
			"N",
			"n",
			"std::Ostream",
			"std::Istream",
			"Is",
			"Os",
			"plhs",
			"lhs",
			"n",
			"bytes",
			"os",
			"is",
			"d[",
			"d",
			"N",
			"size_t",
			"raw_t",
			"byte_t",
			"vector_t",
			"FReal",
			"char *",
			"int",
			"camera_t",
			"plan_t",
			"adapter_t",
			"time_t",
			"real_t",
			"void",
			"size_t",
			"bool_t",
			"_AdapterIndex",
			"_CameraIndex",
			"nullsym",
			"TIFF_VALUE_SIZEOF",
			"tiff_e",
			"value",
			"n",
			"result_t",
			".n"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"StringInitSize",
			"BitsByte",
			"End",
			"TypeSymbol",
			"TypeElement",
			"TypeElm",
			"_Size",
			"TypeElement",
			"SizeLhs",
			"TSequence",
			"FSize",
			"Size",
			"Data",
			"Tmp",
			"Rhs",
			"Lhs",
			"Max",
			"FBool",
			"TOStream",
			"TIStream",
			"Make",
			"NullPtr",
			"String",
			"Out",
			"In",
			"TFStream",
			"TOStream",
			"FIStream",
			"NullPtr",
			"Resize",
			"Rhs",
			"Index",
			"_SizeBuffer",
			"_Size",
			"Data",
			"FSize",
			"_Reserved",
			"TString",
			"Min",
			"",
			"FSize",
			"TPoint",
			"Lhs",
			"Index",
			"Size",
			"Data[",
			"TypeData",
			"SizeData",
			"TypePoint",
			"SizePoint",
			"Size",
			"Min",
			"True",
			"False",
			"Data[",
			"PtrLhs",
			"FRaw",
			"Lhs",
			"Rhs",
			"TByte",
			"FBoolean",
			"SizeBytes",
			"FSize",
			"Size",
			"Index",
			"FOStream",
			"FIStream",
			"FInStream",
			"In",
			"Out",
			"PtrLhs",
			"Lhs",
			"Index",
			"Bytes",
			"Os",
			"Is",
			"Data[",
			"Data",
			"Size",
			"FSize",
			"FRaw",
			"TByte",
			"array_t",
			"FString ",
			"FString",
			"FReturn",
			"FCamera",
			"FPlan",
			"FAdapter",
			"FTime",
			"FReal",
			"FVoid",
			"FSize",
			"FBool",
			"_AdapterCount",
			"_CameraCount",
			"bounds_t",
			".N"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": true,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "Core/Types.hpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 845,
						"regions":
						{
						},
						"selection":
						[
							[
								747,
								747
							]
						],
						"settings":
						{
							"syntax": "Packages/C++11/C++11.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "ShapeSpacing/init_cl.bat",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 44,
						"regions":
						{
						},
						"selection":
						[
							[
								44,
								44
							]
						],
						"settings":
						{
							"syntax": "Packages/Batch File/Batch File.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "ShapeSpacing/make.bat",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 36,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Batch File/Batch File.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				}
			]
		},
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 3,
					"file": "ShapeSpacing/ShapeSpacing.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 106,
						"regions":
						{
						},
						"selection":
						[
							[
								49,
								49
							]
						],
						"settings":
						{
							"syntax": "Packages/C++11/C++11.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 22.0
	},
	"input":
	{
		"height": 65.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.5,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 131.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.hex_viewer_inspector":
	{
		"height": 90.0
	},
	"pinned_build_system": "",
	"project": "Algorithms.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 293.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
